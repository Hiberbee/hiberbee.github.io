<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://hiberbee.com/atom.xml" rel="self" type="application/atom+xml"/><link href="https://hiberbee.com/" rel="alternate" type="text/html"/><updated>2019-06-12T08:26:05+03:00</updated><id>https://hiberbee.com/atom.xml</id><entry><title type="html">%name% as a second language</title><link href="https://hiberbee.com/gc/second-language/" rel="alternate" type="text/html" title="%name% as a second language"/><published>2019-07-12T00:00:00+03:00</published><updated>2019-07-12T00:00:00+03:00</updated><id>https://hiberbee.com/gc/second-language</id><content type="html" xml:base="https://hiberbee.com/gc/second-language/">&lt;h1&gt;%name% as a second language&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;О сложности и простоте изучения новых языков программирования&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Многие разработчики хотя бы раз задумаывались о смене языка или первичного &lt;del&gt;бульйона&lt;/del&gt; стека технологий, с которого они начинали писать код, и по причине максимально накопленного опыта - продолжают и сейчас. И хоть парадигмы, паттерны и структуры данных не зависят от языка, для многих миграция из &lt;em&gt;А&lt;/em&gt; в &lt;em&gt;B&lt;/em&gt; так и остается теорией, законсервированной в зоне комфорта. А иногда попадается вкусная вакансия, но неделя на подготовку к интервью уходит на чтение stackoverflow и настройку окружения.&lt;/p&gt; &lt;p&gt;Вспомните случаи перехода из бекенда в фронтенд или смены RoR на Spring у ваших знакомых - практически всегда это горячая вакансия + внутренний переход между департаментами, немного реже - понижение грейда на ступеньку вниз либо с испытательным сроком. И стандартный (и признаться, весьма забавный) сценарий - слабые знания инструментария разработки и Core API и отличное знание алгоритмов и шаблонов проектирования.&lt;/p&gt; &lt;p&gt;Есть хорошая новость - не обязательно ждать подобный случай или пропускать горячую вакансию, и тем более переходить на позицию младшего разработчика, имея 5 лет опыта в альтернативной технологии. Свой опыт подобных трансферов я оформил в виде тренингов, наиболее подходящих для формата экспресс-обучения - они отмечены тегами &lt;a href=&quot;/trainings/second-language/&quot;&gt;second language&lt;/a&gt; или &lt;a href=&quot;/trainings/fast-track/&quot;&gt;fast track&lt;/a&gt; и будут отличным трамплином при наличии уверенных знаний первичной технологии в следующих сценариях:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JavaScript → TypeScript&lt;/li&gt; &lt;li&gt;PHP 7 (Symfony/Doctrine) → Java 11 (Spring/Hibernate), Ruby (Rails) → Groovy (Grails)&lt;/li&gt; &lt;li&gt;REST API → GraphQL API&lt;/li&gt; &lt;li&gt;Cucumber/xUnit/Selenium → смена языка с сохранением фрейморка (например, PHP Behat → Cucumber JVM, Ruby RSpec → Groovy Spek)&lt;/li&gt; &lt;li&gt;объектная парадигма Java и/или Maven → функциональная парадмигма Kotlin / Groovy и/или Gradle&lt;/li&gt; &lt;li&gt;Docker Swarm → Kubernetes, Chef → Puppet, Ansible → Terraform&lt;/li&gt; &lt;li&gt;SQL, noSQL и Graph DB - в любых направлениях&lt;/li&gt; &lt;li&gt;аналогично PHP, Ruby, Python - практически в любых направлениях&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Формат подобрных экспрес-тренингов - полный цикл миграции приложение из &lt;em&gt;А&lt;/em&gt; в &lt;em&gt;B&lt;/em&gt; - настраиваем окружение, разбираем ключевые отличия, проводим паралели и моделируем интервью на желаемую позицию.&lt;/p&gt;</content><author><name></name></author><category term="second language"/><category term="career"/><summary type="html">%name% as a second language</summary></entry></feed>