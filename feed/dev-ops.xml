<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://hiberbee.com/feed/dev-ops.xml" rel="self" type="application/atom+xml" /><link href="https://hiberbee.com/" rel="alternate" type="text/html" /><updated>2019-05-31T06:55:21+03:00</updated><id>https://hiberbee.com/feed/dev-ops.xml</id><title type="html">Hiberbee | Tech Consulting for IT professionals | Dev-ops</title><subtitle>Технический консалтинг и супервайзинг для разработчиков, техлидов, проектных команд. Специализации: DevOps, System Architecture, Engineering Practices, Software Engineering, Quality Assurance, technologies, services</subtitle><author><name>Vladyslav Volkov</name><email>vlad@hiberbee.com</email></author><entry><title type="html">BDD</title><link href="https://hiberbee.com/06/08/qa-011/" rel="alternate" type="text/html" title="BDD" /><published>2019-06-08T00:00:00+03:00</published><updated>2019-06-08T00:00:00+03:00</updated><id>https://hiberbee.com/06/08/qa-011</id><content type="html" xml:base="https://hiberbee.com/06/08/qa-011/"></content><author><name>Vladyslav Volkov</name><email>vlad@hiberbee.com</email></author><category term="dev-ops" /><category term="4H" /><category term="Sat" /><summary type="html"></summary></entry><entry><title type="html">Kubernetes</title><link href="https://hiberbee.com/06/06/do-021/" rel="alternate" type="text/html" title="Kubernetes" /><published>2019-06-06T00:00:00+03:00</published><updated>2019-06-06T00:00:00+03:00</updated><id>https://hiberbee.com/06/06/do-021</id><content type="html" xml:base="https://hiberbee.com/06/06/do-021/">&lt;h3 id=&quot;какая-цель-тренинга&quot;&gt;Какая цель тренинга?&lt;/h3&gt;
&lt;p&gt;Начать с настройки локального окружения для Kubernetes - довольно логичный шаг. И раз уж поднимаем эту тему, ее однозначно стоит расширить несколькими дополнительными инструментами.&lt;/p&gt;

&lt;h3 id=&quot;с-чем-успеем-поработать&quot;&gt;С чем успеем поработать?&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Helm - это пакетный менеджер для Kubernetes. Идея, подкупающая своей новизной - репозиторий, из которого скачиваешь нужный пакет - набор ресурсов - и релизишь. В теории все легко и просто, на практике - десятки статей с критикой и предупреждениями не использовать. Тем не менее, очень много готовых рецептов уже доступно в репозиториях и установка сторонних сервисов часто начинается с helm install - начнем и мы - как минимум для понимания контекста.&lt;/li&gt;
  &lt;li&gt;Операторы - свежий виток переосмысления повышенной сложности эксплуатации определенных ресурсов. Хоть helm и предоставляет установку чего-либо в одну команду, на практике комплексным продуктам (например, слой приложений для мониторинга, или кластер postgres с pgbouncer, бекапами и репликацией) подобный подход не подходит. Упростить это должны были операторы, а на практике - мы с ними и познакомимся.&lt;/li&gt;
  &lt;li&gt;3 элемент локального окружения - небольшая утилита, единственной функцией которой является замена работающего контейнера в кластере его локальной версией, с поддержкой монтирования локальной файловой системы и полным погружением в контекст кластера - секреты, сервисные аккаунты, открытые порты - все переходит под ваш контроль, с возможностью поставить breakpoint. Да, напоминает аналог SFTP и редактирования файлов “по-живому”, с небольшим исключением - после отладки, контейнеры меняются местами и все продолжает работать в штатном режиме.&lt;/li&gt;
  &lt;li&gt;Ну и по традиции, вслед за Docker, мы научимся запускать K8S в режиме Kube-in-Docker, с возможностью запуска контейнеров в контейнере (но в другом Runtime). Это вовсе не штатный режим, но полезен для начинающих он тем, что за 2 секунды старта контейнера вы получаете чистый настроеный куб, занимающий в ОЗУ 100 мегабайт. На первых порах мастер-ноду часто придется пересоздавать после экспериментов, и такой режим просто незаменим.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;на-кого-расчитан-тренинг&quot;&gt;На кого расчитан тренинг?&lt;/h3&gt;
&lt;p&gt;Опыт работы с Docker и знание базовых концептов Kube обязательно - темы для старта довольно требовательные, и легко можно потерять суть происходящего. Ноутбук тоже не очень рекомендую, так как без опыта настройки можно потратить много времени. По завершению воркшопа все скрипты будут доступны.
Рекомендуется посетит вводный урок &lt;a href=&quot;/kubernetes-technology-intro/&quot;&gt;Kubernetes: Technology kick-off&lt;/a&gt;&lt;/p&gt;</content><author><name>Vladyslav Volkov</name><email>vlad@hiberbee.com</email></author><category term="dev-ops" /><category term="cloud-native" /><category term="2H" /><category term="Wed" /><category term="kubernetes" /><category term="localhost" /><summary type="html">Какая цель тренинга? Начать с настройки локального окружения для Kubernetes - довольно логичный шаг. И раз уж поднимаем эту тему, ее однозначно стоит расширить несколькими дополнительными инструментами.</summary></entry><entry><title type="html">Kubernetes</title><link href="https://hiberbee.com/05/30/do-020/" rel="alternate" type="text/html" title="Kubernetes" /><published>2019-05-30T00:00:00+03:00</published><updated>2019-05-30T00:00:00+03:00</updated><id>https://hiberbee.com/05/30/do-020</id><content type="html" xml:base="https://hiberbee.com/05/30/do-020/">&lt;p&gt;Цитата SRE из Google:
“Kubernetes evolves very quickly (too quickly to maintain currency), uses (many) novel concepts and that there are (too) many ways to solve the same problem.”&lt;/p&gt;

&lt;p&gt;Спустя год, как и годом ранее, она все еще актуальна. Технология получилась настолько гибкой, что с легкостью смогла принять множество идей и патчей в короткий промежуток времени. Incubating статус перестал пугать, deprecated notice есть в каждой минорной версии, а в течении года появилось сразу несколько новых концептов - операторы и сервис-каталог, которые совсем не упростили понимание новичков.&lt;/p&gt;

&lt;p&gt;Охватить все концепции за один тренинг точно не получится, но сделать экскурс по ключевым архитектурным решениям, проследить, какие возможности стали доступны, и с какими сложностями сталкивались компании при переезде - вполне реально. Как минимум, станет реальнее оценить трудозатраты и составить план для дальнейшего изучения.&lt;/p&gt;

&lt;h3 id=&quot;с-чем-успеем-поработать&quot;&gt;С чем успеем поработать?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;истории и причинах появления K8S и факторах, обеспечивших спрос, и как следствие - рост его популярности&lt;/li&gt;
  &lt;li&gt;архитектуре, базовых компонентах и их ролях&lt;/li&gt;
  &lt;li&gt;основных ресурсах API, развернув демо-инстанс небольшого приложения&lt;/li&gt;
  &lt;li&gt;возможностях, которые предоставляет API, для расширения стандартных функций (e.g. Custom Resource Defintions, Operators)&lt;/li&gt;
  &lt;li&gt;и в завершение - как Kubernetes повлиял на разработку, отладку, тестирование, деплоймент и другие составляющие SDLC&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;на-кого-расчитан-тренинг&quot;&gt;На кого расчитан тренинг?&lt;/h3&gt;
&lt;p&gt;Поскольку этот воркшоп скорее фундамент для более предметных тренингов, соотношение лекции/демо будет около 50/50, и поможет разработчикам, которые планируют, уже начали эксплуатацию Kubernetes, либо рассматривают Куб как альтернативу Swarm, составить оптимальный backlog и учесть последние обновления платформы.&lt;/p&gt;</content><author><name>Vladyslav Volkov</name><email>vlad@hiberbee.com</email></author><category term="dev-ops" /><category term="cloud-native" /><category term="orchestration" /><category term="2H" /><category term="Wed" /><category term="kubernetes" /><summary type="html">Цитата SRE из Google: “Kubernetes evolves very quickly (too quickly to maintain currency), uses (many) novel concepts and that there are (too) many ways to solve the same problem.”</summary></entry><entry><title type="html">Ansible</title><link href="https://hiberbee.com/05/29/do-010/" rel="alternate" type="text/html" title="Ansible" /><published>2019-05-29T00:00:00+03:00</published><updated>2019-05-29T00:00:00+03:00</updated><id>https://hiberbee.com/05/29/do-010</id><content type="html" xml:base="https://hiberbee.com/05/29/do-010/">&lt;h3 id=&quot;какая-цель-тренинга&quot;&gt;Какая цель тренинга?&lt;/h3&gt;
&lt;p&gt;Наработать best practices и подготовить к поддержке более сложных инфраструктур, расширить кругозор используемых подходов и решений, показать новые ниши для автоматизации и поделиться рабочими лайфхаками.&lt;/p&gt;

&lt;h3 id=&quot;зачем-мне-это-нужно&quot;&gt;Зачем мне это нужно?&lt;/h3&gt;
&lt;p&gt;Счет облачных сервисов идет на десятки, и каждый из них имеет уникальную конфигурацию, которая зависит от множества параметров - установленной версии пакета, операционной системы, настроек и переменных окружения, прав доступа. Без инструментов для управления конфигурациями поддержка кода инфраструктуры рано или поздно перестанет быть контролируемой - виной тому чрезмерная избыточность, высокая вероятность появления ошибок по вине человеческого фактора, слабая воспроизводимость среды и самое критичное в этой ситуации - предсказуемость поведения окружения. Несколько часов инвестиции в знания configuration management окупится с лихвой в дальнейшей работе.&lt;/p&gt;

&lt;h3 id=&quot;с-чем-успеем-поработать&quot;&gt;С чем успеем поработать?&lt;/h3&gt;
&lt;p&gt;На воркшопе мы разберем workflow на примере Ansible, отработав несколько стандартных сценариев:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;полный provisioning среды, на примере bare-metal установки docker+kubernetes&lt;/li&gt;
  &lt;li&gt;управление инфраструктурой (группировка серверов, паралельное-последовательное выполнение, работа с контейнерами)
И несколько нестандартных, но набирающих популярность:&lt;/li&gt;
  &lt;li&gt;работа в связке с Kubernetes - через API, в качестве задачи (Job) и отдельно - как оператор&lt;/li&gt;
  &lt;li&gt;адаптируемость к новым API (на примерах интеграции с DigitalOcean, Vault, Slack и другими сервисами)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;почему-именно-эти-темы&quot;&gt;Почему именно эти темы?&lt;/h3&gt;
&lt;p&gt;Примеры полностью покрывают весь функционал - секреты, события, факты, циклы, роли, повышение полномочий и т.д.&lt;/p&gt;

&lt;h3 id=&quot;на-кого-расчитан-тренинг&quot;&gt;На кого расчитан тренинг?&lt;/h3&gt;
&lt;p&gt;Воркшоп рекомендуется для разработчиков под любые серверные технологии, системных администраторов, инженеров DevOps / SecOps/ SRE, и QA Automation / SDET, работающих с несколькими тестовыми контурами.
для комфортного восприятия рекомендуется:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;иметь достаточный для настройки окружения разработки unix-окружения (на основе Debian или CentOs)&lt;/li&gt;
  &lt;li&gt;плюсом будет опыт работы с аналогичным инструментом&lt;/li&gt;
  &lt;li&gt;быть готовым к интенсивному темпу live-coding сессии&lt;/li&gt;
  &lt;li&gt;не брать ноутбук в расчете повторять шаги по ходу сессии (код с комментариями и примерами будет доступен )&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Vladyslav Volkov</name><email>vlad@hiberbee.com</email></author><category term="dev-ops" /><category term="cloud-native" /><category term="ansible" /><category term="configuration-management" /><category term="2H" /><category term="Wed" /><summary type="html">Какая цель тренинга? Наработать best practices и подготовить к поддержке более сложных инфраструктур, расширить кругозор используемых подходов и решений, показать новые ниши для автоматизации и поделиться рабочими лайфхаками.</summary></entry><entry><title type="html">Docker Swarm</title><link href="https://hiberbee.com/05/28/do-001/" rel="alternate" type="text/html" title="Docker Swarm" /><published>2019-05-28T00:00:00+03:00</published><updated>2019-05-28T00:00:00+03:00</updated><id>https://hiberbee.com/05/28/do-001</id><content type="html" xml:base="https://hiberbee.com/05/28/do-001/">&lt;h3 id=&quot;какая-цель-тренинга&quot;&gt;Какая цель тренинга?&lt;/h3&gt;
&lt;p&gt;Наглядно продемонстрировать на примере Swarm простоту первого шага к адапатации приложений к Cloud Native, структурировать знания дизайна микросервисных архитектур, узнать новые подходы и приемы работы.&lt;/p&gt;

&lt;h3 id=&quot;зачем-мне-это-нужно&quot;&gt;Зачем мне это нужно?&lt;/h3&gt;
&lt;p&gt;Если вы уже работаете с Docker и использовали Compose, то перейти к Swarm не составит труда. И даже если вы все равно планируете использовать Kubernetes, основные концепции контейнерной оркестровки применимы и к Swarm.&lt;/p&gt;

&lt;h3 id=&quot;с-чем-успеем-поработать&quot;&gt;С чем успеем поработать?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;создадим кластер swarm с master и slave нодами и подключим локальный Registry&lt;/li&gt;
  &lt;li&gt;развернем в кластере Postgres и RabbitMQ в режиме HA;&lt;/li&gt;
  &lt;li&gt;используя Traefik, настроим балансировку траффика и DNS&lt;/li&gt;
  &lt;li&gt;с помощью LetsEncrypt настроим авто выдачу SSL-сертификатов подпишем *.localhost для удобства локальной разработки&lt;/li&gt;
  &lt;li&gt;добавим мониторинг и сбор логов с TICK и ELK стеками, и менеджмент кластера с Portainer&lt;/li&gt;
  &lt;li&gt;установим Vault для менеджмента секретных данных и S3 совместимое open-source решение для хранения файлов&lt;/li&gt;
  &lt;li&gt;развернем API Gateway на NodeJS + GraphQL, и несколько API микросервисов на Spring Cloud&lt;/li&gt;
  &lt;li&gt;активируем serverless-возможности на базе OpenFAAS&lt;/li&gt;
  &lt;li&gt;в итоге, с помощью автоматизации на Ansible, перенесем наш кластер на дроплеты DigitalOcean, используя API&lt;/li&gt;
  &lt;li&gt;в конце проведем сессию вопросов-ответов и обзор альтернативных решений&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;почему-именно-эти-темы&quot;&gt;Почему именно эти темы?&lt;/h3&gt;
&lt;p&gt;Этот список технологий считаю джентельменским набором, хорошо зарекомендовавшим себя как в эксплуатации, так и обучении для программистов с разным уровнем знаний и опытом разработки.&lt;/p&gt;

&lt;h3 id=&quot;на-кого-рассчитан-тренинг&quot;&gt;На кого рассчитан тренинг?&lt;/h3&gt;
&lt;p&gt;Разработчики и Dev/Ops, и все специалисты, работающие с Cloud Native приложениями. Для комфортного восприятия рекомендуется:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;иметь опыт с Docker и Docker Compose&lt;/li&gt;
  &lt;li&gt;на базовом работать с UNIX-based системами&lt;/li&gt;
  &lt;li&gt;понимать концепции 12-factor-app (https://12factor.net/)&lt;/li&gt;
  &lt;li&gt;быть готовым к интенсивному темпу live-coding сессии&lt;/li&gt;
  &lt;li&gt;не брать ноутбук в расчете повторять шаги по ходу сессии (код с комментариями будет доступен после воркшопа)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Vladyslav Volkov</name><email>vlad@hiberbee.com</email></author><category term="dev-ops" /><category term="cloud-native" /><category term="docker" /><category term="docker-swarm" /><category term="orchestration" /><category term="2H" /><category term="Thu" /><summary type="html">Какая цель тренинга? Наглядно продемонстрировать на примере Swarm простоту первого шага к адапатации приложений к Cloud Native, структурировать знания дизайна микросервисных архитектур, узнать новые подходы и приемы работы.</summary></entry></feed>